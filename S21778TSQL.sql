-- tables
-- Table: Doctor
CREATE TABLE Doctor (
    IdDoctor integer  NOT NULL,
    FirstName varchar(50)  ,
    LastName varchar(50)  ,
    DoctorSpeciality varchar(50)  ,
	Salary float(10),
    CONSTRAINT Doctor_pk PRIMARY KEY (IdDoctor)
) ;

-- Table: DoctorPatient
CREATE TABLE DoctorPatient (
    IdDocPat integer  NOT NULL,
    IdPatient integer  NOT NULL,
    IdDoctor integer  NOT NULL,
    CONSTRAINT DoctorPatient_pk PRIMARY KEY (IdDocPat)
) ;

-- Table: Nurse
CREATE TABLE Nurse (
    IdNurse integer  NOT NULL,
    IdSupervisor integer  NOT NULL,
    FirstName varchar(50)  NOT NULL,
    IdWard integer  NOT NULL,
    CONSTRAINT Nurse_pk PRIMARY KEY (IdNurse)
) ;

-- Table: Patient
CREATE TABLE Patient (
    IdPatient integer  NOT NULL,
    FirstName varchar(20)  NOT NULL,
    LastName varchar(50)  NOT NULL,
    IdRoom integer  ,
    CONSTRAINT Patient_pk PRIMARY KEY (IdPatient)
) ;

-- Table: Room
CREATE TABLE Room (
    IdRoom integer  NOT NULL,
    RoomNumber varchar(50)  NOT NULL,
    IdWard integer  NOT NULL,
    CONSTRAINT Room_pk PRIMARY KEY (IdRoom)
) ;

-- Table: TreatmentDetails
CREATE TABLE TreatmentDetails (
    IdTreatmentDetails integer  NOT NULL,
    TreatmentName varchar(50)  ,
    Price float(10)  NOT NULL,
    IdPatient integer  ,
    CONSTRAINT TreatmentDetails_pk PRIMARY KEY (IdTreatmentDetails)
) ;

-- Table: Ward
CREATE TABLE Ward (
    IdWard integer  NOT NULL,
    WardName varchar(50)  NOT NULL,
    CONSTRAINT Ward_pk PRIMARY KEY (IdWard)
) ;

-- foreign keys
-- Reference: DoctorPatient_Doctor (table: DoctorPatient)
ALTER TABLE DoctorPatient ADD CONSTRAINT DoctorPatient_Doctor
    FOREIGN KEY (IdDoctor)
    REFERENCES Doctor (IdDoctor);

-- Reference: DoctorPatient_Patient (table: DoctorPatient)
ALTER TABLE DoctorPatient ADD CONSTRAINT DoctorPatient_Patient
    FOREIGN KEY (IdPatient)
    REFERENCES Patient (IdPatient);

-- Reference: Nurse_Ward (table: Nurse)
ALTER TABLE Nurse ADD CONSTRAINT Nurse_Ward
    FOREIGN KEY (IdWard)
    REFERENCES Ward (IdWard);

-- Reference: Patient_Room (table: Patient)
ALTER TABLE Patient ADD CONSTRAINT Patient_Room
    FOREIGN KEY (IdRoom)
    REFERENCES Room (IdRoom);

-- Reference: Room_Ward (table: Room)
ALTER TABLE Room ADD CONSTRAINT Room_Ward
    FOREIGN KEY (IdWard)
    REFERENCES Ward (IdWard);

-- Reference: TreatmentDetails_Patient (table: TreatmentDetails)
ALTER TABLE TreatmentDetails ADD CONSTRAINT TreatmentDetails_Patient
    FOREIGN KEY (IdPatient)
    REFERENCES Patient (IdPatient);


--data

--ADDING DATA TO DOCTOR TABLE
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (1, ' Charles ', 'Burton', 'Allergy',4000);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (2, 'Malcolm', 'Sayer', 'Pediatricians',5000);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (3, 'Miguel', 'Reinhardt', 'Cardiologist',9000);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (4, 'Kate ', 'McRae', 'Neurologists',6000);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (5, ' Lawrence', 'Augustine', 'Dermatologists',4500);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (6, 'Rex', 'Martin', 'Allergy',4000);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (8, 'Andrew', 'Manson', 'Allergy',3500);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (9, 'Hastie', 'Lanyon', 'Neurologists',6000);
INSERT INTO DOCTOR(IDDOCTOR, FIRSTNAME, LASTNAME, DOCTORSPECIALITY, SALARY) VALUES (10, 'Bernard', 'Rieux', 'Pediatricians',5000);

--ADDING DATA TO WARD TABLE
INSERT INTO WARD(IDWARD, WARDNAME) VALUES (111, 'ICU');
INSERT INTO WARD(IDWARD, WARDNAME) VALUES (112, 'COMA');
INSERT INTO WARD (IDWARD, WARDNAME) VALUES (113, 'GENERAL');
INSERT INTO WARD (IDWARD, WARDNAME) VALUES (114, 'CHILD WARD');
INSERT INTO WARD(IDWARD, WARDNAME) VALUES (115, 'WAITING');

--ADDING DATA TO PATIENT TABLE
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (101, 'Jorge', 'Santiago' );
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (102, 'Jamari', 'Villanueva');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (103, 'Case ', 'Chapman');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (104, 'William', 'Farrell');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (105, 'Adalynn', 'Mora');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (106, 'Casey', 'Rhodes');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (107, 'Lilly', 'Mahoney');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (108, 'Derick', 'Guerrero');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (109, 'Makhi', 'Brock');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (110, 'Christine', 'Newton');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (111, 'Alexander', 'Cheyanne');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (113, 'Terry', 'Watkins');
INSERT INTO PATIENT(IDPATIENT, FIRSTNAME, LASTNAME) VALUES (114, 'Ter', 'Wat');

--ADDING DATA TO NURSE TABLE
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (121, 21, 'Whitney',111);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (122, 22, 'Peyton', 112);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (123, 23, 'Tia', 111);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (124, 24, 'Mia', 112);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (125, 25, 'Elisabeth', 113);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (126, 26, 'Karlee', 114);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (127, 27, 'Marina', 113);
INSERT INTO NURSE(IDNURSE, IDSUPERVISOR, FIRSTNAME, IDWARD) VALUES (128, 28, 'Tatiana', 114);

--ADDING DATA TO ROOM TABLE
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1001, 'A' , 111);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1002, 'B', 111);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1003, 'C', 112);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1004, 'D', 112);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1005, 'E', 113);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1006, 'F', 113);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1007, 'G', 113);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1008, 'H', 114);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1009, 'I', 114);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1010, 'J', 114);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1011, 'K', 115);
INSERT INTO ROOM(IDROOM, ROOMNUMBER ,IDWARD) VALUES (1012, 'L', 115);

--ADDING DATA TO TREATMENTDETAILS TABLE
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (1, 'ALLERGY TREATMENT', 250,101);
INSERT INTO TREATMENTDETAILS  (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (2, 'HEART SURGERY', 5000,102);
INSERT INTO TREATMENTDETAILS  (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (3, 'LABOUR', 7000,106);
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (4, 'NEURON DISORDER TREATMENT', 500,103);
INSERT INTO TREATMENTDETAILS  (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (5, 'SKIN TREATMENT', 400,104);
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (6, 'HEART SURGERY', 5000,105);
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (7, 'ALLERGY TREATMENT', 250,107);
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (8, 'NEURON DISORDER TREATMENT', 600,108);
INSERT INTO TREATMENTDETAILS(IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (9, 'LABOUR', 7000, 110);
INSERT INTO TREATMENTDETAILS(IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (10, 'SKIN TREATMENT', 400,109);
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (11, 'SKIN TREATMENT', 400,111);
INSERT INTO TREATMENTDETAILS (IDTREATMENTDETAILS, TREATMENTNAME, PRICE, IDPATIENT) VALUES (12, 'ALLERGY TREATMENT', 250,113);

--ADDING DATA TO DOCTORPATIENT
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1111, 101, 1);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1112, 106, 2);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1113, 102, 3);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1114, 103, 4);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1115, 104, 5);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1116, 113, 6);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1117, 107, 8);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1118, 108, 9);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1119, 110, 10);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (1110, 109, 5);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (11111, 111, 5);
INSERT INTO DOCTORPATIENT(IDDOCPAT, IDPATIENT, IDDOCTOR) VALUES (11112, 105, 3);



--Queries

-- Task 1 procedure with output parameters


Create PROCEDURE AddTreatmentDetails
	-- Add the parameters for the stored procedure here
	@Name VARCHAR(50),
	@Price money,
	@IdTreatmentDetails INT OUT
AS
BEGIN
	SET NOCOUNT ON;

	IF EXISTS (SELECT 1 FROM TreatmentDetails d WHERE d.TreatmentName = @Name)
		BEGIN
			RAISERROR ('Treatment already exists!',11,-1);
		END;
    ELSE
		BEGIN
			SET @IdTreatmentDetails = (SELECT MAX(IdTreatmentDetails) + 1 FROM TreatmentDetails );
			INSERT INTO TreatmentDetails( IdTreatmentDetails,TreatmentName, Price) VALUES (@IdTreatmentDetails, @Name, @Price);
			PRINT 'New Treament ' + @Name + ' added.';
		END;	
END

GO

--to add new treatment
DECLARE @newId INT;
EXEC AddTreatmentDetails 'CANCER SURGERY', @IdTreatmentDetails = @newId OUT, @Price = 7500;
SELECT @newId AS NewIdTreatmentDetails;

GO

--to check error
DECLARE @newId INT;
EXEC AddTreatmentDetails 'HEART SURGERY', @IdTreatmentDetails = @newId OUT, @Price = 7500;
SELECT @newId AS NewIdTreatmentDetails;

GO

------------------------------------------------------------------------------------------------------
-- task 2  trigger

Create TRIGGER updateDoctor ON Doctor
FOR INSERT, UPDATE, DELETE
AS    
	IF EXISTS (SELECT 1 
				FROM inserted i RIGHT JOIN deleted d ON i.IdDoctor=d.IdDoctor 
				WHERE i.IdDoctor IS NULL AND d.Salary > 0) --removed records (that appear only in "deleted" table) with salary higher than 0
		BEGIN
			RAISERROR ('Cannot remove  with salary higher than 0', 15, 1);
			ROLLBACK;
		END

	IF EXISTS (SELECT 1 
				FROM inserted i JOIN deleted d ON i.IdDoctor=d.IdDoctor 
				WHERE i.FirstName<>d.FirstName) --updated records with new names
		BEGIN
			RAISERROR ('Cannot change Doctor names!', 15, 1);
			ROLLBACK;
		END

	IF EXISTS (SELECT 1 --new records with names that already exist in table Doctor
				FROM inserted i LEFT JOIN deleted d ON i.IdDoctor=d.IdDoctor 
				WHERE d.IdDoctor IS NULL AND EXISTS (SELECT 1 
	                        FROM Doctor t       
                                WHERE t.Firstname = i.Firstname AND t.IdDoctor<> i.IdDoctor)) 
													
		BEGIN
			RAISERROR ('We already have an Doctor with such name!', 15, 1);
			ROLLBACK;
		END


		select * 
		from doctor;


	--to check
UPDATE Doctor
SET FirstName = 'Kunal'
WHERE IdDoctor = 1;





--task 3

CREATE TABLE Medicine 
             (IdItem	  INT IDENTITY,
             MedicineName     VARCHAR(250) NOT NULL,
             Quantity     INT NOT NULL);

ALTER TABLE Medicine
ADD CONSTRAINT Medicine_PK PRIMARY KEY(IdItem);

INSERT INTO Medicine(MedicineName, Quantity)
VALUES ('APAP', 10),
       ('GLYCOL', 30),
       ('TATRAZINE', 35);

GO

CREATE FUNCTION Med()
RETURNS VARCHAR(50)
BEGIN
	DECLARE @idItem INT, @MedName VARCHAR(50), @quantity INT;
		
	SELECT TOP 1 @idItem = w.IdItem, @MedName = w.MedicineName, @quantity = w.Quantity
	FROM Medicine w
	WHERE w.Quantity = (SELECT MAX(Quantity) FROM Medicine);

	IF @quantity < 10
		RETURN NULL;

	RETURN @MedName;
END
GO

--change the quantity of medicine
UPDATE Medicine 
SET Quantity = Quantity + 10
WHERE MedicineName = S19339.Med();

